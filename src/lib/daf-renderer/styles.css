/*Keep this as the first rule in the file*/
.dafRoot {
  --contentWidth: 0px;
  --padding-horizontal: 0px;
  --padding-vertical: 0px;
  --halfway: 50%;

  --fontFamily-inner: "Rashi";
  --fontFamily-outer: "Tosafot";
  --fontFamily-main: "Vilna";
  --direction: "rtl";

  --fontSize-main: 0px;
  --fontSize-side: 0px;

  --lineHeight-main: 0px;
  --lineHeight-side: 0px;

  --mainWidth: 0%;
  --mainMargin-start: var(--mainWidth);
  --sidePercent: calc(calc(100% - var(--mainMargin-start)) / 2);
  --remainderPercent: calc(100% - var(--sidePercent));

  --innerFloat: left;
  --outerFloat: right;

  --spacerHeights-start: 0px;
  --spacerHeights-outer: 0px;
  --spacerHeights-inner: 0px;
  --spacerHeights-end: 0px;

  /*Edge Cases*/
  --hasInnerStartGap: 0;
  --hasOuterStartGap: 0;
  --innerStartWidth: 50%;
  --innerPadding: 0px;
  --outerStartWidth: 50%;
  --outerPadding: 0px;
}

/*Containers*/
.dafRoot,
.outer,
.inner,
.main {
  width: var(--contentWidth);
  pointer-events: none;
  box-sizing: content-box;
}

.outer, .inner, .main {
  position: absolute;
}

/*Float changes with amud*/
.inner .spacer,
.main .spacer.outerMid {
  float: var(--innerFloat);
}

.outer .spacer,
.main .spacer.innerMid {
  float: var(--outerFloat);
}

/*Spacer widths determined by options*/
.inner .spacer,
.outer .spacer {
  width: var(--halfway);
}
.spacer.mid {
  width: var(--remainderPercent);
}

.main .spacer.start {
  width: var(--contentWidth);
}
.main .spacer.innerMid,
.main .spacer.outerMid {
  width: var(--sidePercent);
}

/*Spacer heights determined by algorithm*/
.spacer.start {
  height: var(--spacerHeights-start);
}

.spacer.end {
  height: var(--spacerHeights-end);
}

.inner .spacer.mid,
.main .spacer.innerMid {
  height: var(--spacerHeights-inner);
}
.outer .spacer.mid,
.main .spacer.outerMid {
  height: var(--spacerHeights-outer);
}

/*Settings to handle edge Cases*/

.inner .spacer.start {
  width: var(--innerStartWidth);
  margin-left: var(--innerPadding);
  margin-right: var(--innerPadding);
}

.outer .spacer.start {
  width: var(--outerStartWidth);
  margin-left: var(--outerPadding);
  margin-right: var(--outerPadding);
}

.inner .spacer.start{
  margin-bottom: calc(var(--padding-vertical) * var(--hasInnerStartGap));
}
.outer .spacer.start {
  margin-bottom: calc(var(--padding-vertical) * var(--hasOuterStartGap));
}

.spacer.mid {
  clear: both;
}

/*Margins!*/
.spacer.start,
.spacer.end,
.main .spacer.innerMid,
.main .spacer.outerMid {
  margin-left: calc(0.5 * var(--padding-horizontal));
  margin-right: calc(0.5 * var(--padding-horizontal));
}

.spacer.mid,
.main .text {
  margin-top: var(--padding-vertical);
}

.spacer.mid,
.main .spacer.innerMid,
.main .spacer.outerMid {
  margin-bottom: var(--padding-vertical);
}

/*Text*/
.text {
  direction: var(--direction);
  text-align: justify;
  text-align-last: center;
}

.text span {
  pointer-events: auto;
}

.main .text {
  font-family: var(--fontFamily-main);
  font-size: var(--fontSize-main);
  line-height: var(--lineHeight-main);
}

.inner .text,
.outer .text {
  font-size: var(--fontSize-side);
  line-height: var(--lineHeight-side);
}

.inner .text {
  font-family: var(--fontFamily-inner);
}

.outer .text {
  font-family: var(--fontFamily-outer);
}
